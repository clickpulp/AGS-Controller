#!/usr/bin/env python

def generate_script_header(src_file_path, dst_file_path):
    with open(src_file_path, "r", encoding="utf-8") as src_file:
        header_lines = map(lambda line: line.rstrip(), filter(lambda line: line and len(line) > 0, src_file.readlines()))
        src_file.close()
    
    with open(dst_file_path, "w", encoding="utf-8", newline="\r\n") as dst_file:
        dst_file.write("/////////////////\n")
        dst_file.write("// GENERATED BY generate_script_header.py from {}\n".format(src_file_path))
        dst_file.write("/////////////////\n\n")
        dst_file.write("const char* g_scriptHeader =\n")
        for line in header_lines:
            dst_file.write("    \"{}\\r\\n\"\n".format(line))
        dst_file.write(";\n")
        dst_file.close()
    
    print("Generated {}".format(dst_file_path))
        

def main():
    generate_script_header("AGSController_script_header.ash", "AGSController_script_header.gen.cpp")

if __name__ == '__main__':
    main()
